// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.12.4
// source: implantpb/implantpb.proto

package implantpb

import (
	commonpb "Dur4nC2/misc/protobuf/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Envelope - Used to encode implant<->server messages since we
//            cannot use gRPC due to the various transports used.
type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`                                 // Envelope ID used to track request/response
	Type               uint32 `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`                             // Message type
	Data               []byte `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`                              // Actual message data
	UnknownMessageType bool   `protobuf:"varint,4,opt,name=UnknownMessageType,proto3" json:"UnknownMessageType,omitempty"` // Set if the implant did not understand the message
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Envelope) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Envelope) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Envelope) GetUnknownMessageType() bool {
	if x != nil {
		return x.UnknownMessageType
	}
	return false
}

// BeaconTasks - DO NOT CONFUSE WITH clientpb.BeaconTasks
// Used in
type BeaconTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string      `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"` //beacon id
	Tasks       []*Envelope `protobuf:"bytes,2,rep,name=Tasks,proto3" json:"Tasks,omitempty"`
	NextCheckin int64       `protobuf:"varint,3,opt,name=NextCheckin,proto3" json:"NextCheckin,omitempty"`
}

func (x *BeaconTasks) Reset() {
	*x = BeaconTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconTasks) ProtoMessage() {}

func (x *BeaconTasks) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconTasks.ProtoReflect.Descriptor instead.
func (*BeaconTasks) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{1}
}

func (x *BeaconTasks) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *BeaconTasks) GetTasks() []*Envelope {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *BeaconTasks) GetNextCheckin() int64 {
	if x != nil {
		return x.NextCheckin
	}
	return 0
}

type TaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encoder  string            `protobuf:"bytes,1,opt,name=Encoder,proto3" json:"Encoder,omitempty"`
	RWXPages bool              `protobuf:"varint,2,opt,name=RWXPages,proto3" json:"RWXPages,omitempty"`
	Pid      uint32            `protobuf:"varint,3,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Data     []byte            `protobuf:"bytes,4,opt,name=Data,proto3" json:"Data,omitempty"`
	Request  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *TaskReq) Reset() {
	*x = TaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskReq) ProtoMessage() {}

func (x *TaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskReq.ProtoReflect.Descriptor instead.
func (*TaskReq) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{2}
}

func (x *TaskReq) GetEncoder() string {
	if x != nil {
		return x.Encoder
	}
	return ""
}

func (x *TaskReq) GetRWXPages() bool {
	if x != nil {
		return x.RWXPages
	}
	return false
}

func (x *TaskReq) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *TaskReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *TaskReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{3}
}

func (x *Task) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Register - First message the implant sends to the server
type Register struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Hostname          string `protobuf:"bytes,2,opt,name=Hostname,proto3" json:"Hostname,omitempty"`
	Uuid              string `protobuf:"bytes,3,opt,name=Uuid,proto3" json:"Uuid,omitempty"`
	Username          string `protobuf:"bytes,4,opt,name=Username,proto3" json:"Username,omitempty"`
	Uid               string `protobuf:"bytes,5,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Gid               string `protobuf:"bytes,6,opt,name=Gid,proto3" json:"Gid,omitempty"`
	Os                string `protobuf:"bytes,7,opt,name=Os,proto3" json:"Os,omitempty"`
	Arch              string `protobuf:"bytes,8,opt,name=Arch,proto3" json:"Arch,omitempty"`
	Pid               int32  `protobuf:"varint,9,opt,name=Pid,proto3" json:"Pid,omitempty"`
	Filename          string `protobuf:"bytes,10,opt,name=Filename,proto3" json:"Filename,omitempty"`
	ActiveC2          string `protobuf:"bytes,11,opt,name=ActiveC2,proto3" json:"ActiveC2,omitempty"`
	Version           string `protobuf:"bytes,12,opt,name=Version,proto3" json:"Version,omitempty"`
	ReconnectInterval int64  `protobuf:"varint,13,opt,name=ReconnectInterval,proto3" json:"ReconnectInterval,omitempty"`
	ProxyURL          string `protobuf:"bytes,14,opt,name=ProxyURL,proto3" json:"ProxyURL,omitempty"`
	ConfigID          string `protobuf:"bytes,16,opt,name=ConfigID,proto3" json:"ConfigID,omitempty"`
	PeerID            int64  `protobuf:"varint,17,opt,name=PeerID,proto3" json:"PeerID,omitempty"`
	Locale            string `protobuf:"bytes,18,opt,name=Locale,proto3" json:"Locale,omitempty"`
}

func (x *Register) Reset() {
	*x = Register{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{4}
}

func (x *Register) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Register) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Register) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Register) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Register) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Register) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *Register) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Register) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Register) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Register) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Register) GetActiveC2() string {
	if x != nil {
		return x.ActiveC2
	}
	return ""
}

func (x *Register) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Register) GetReconnectInterval() int64 {
	if x != nil {
		return x.ReconnectInterval
	}
	return 0
}

func (x *Register) GetProxyURL() string {
	if x != nil {
		return x.ProxyURL
	}
	return ""
}

func (x *Register) GetConfigID() string {
	if x != nil {
		return x.ConfigID
	}
	return ""
}

func (x *Register) GetPeerID() int64 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *Register) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

type BeaconRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string    `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Interval    int64     `protobuf:"varint,2,opt,name=Interval,proto3" json:"Interval,omitempty"`
	Jitter      int64     `protobuf:"varint,3,opt,name=Jitter,proto3" json:"Jitter,omitempty"`
	Register    *Register `protobuf:"bytes,4,opt,name=Register,proto3" json:"Register,omitempty"`
	NextCheckin int64     `protobuf:"varint,5,opt,name=NextCheckin,proto3" json:"NextCheckin,omitempty"`
}

func (x *BeaconRegister) Reset() {
	*x = BeaconRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconRegister) ProtoMessage() {}

func (x *BeaconRegister) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconRegister.ProtoReflect.Descriptor instead.
func (*BeaconRegister) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{5}
}

func (x *BeaconRegister) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *BeaconRegister) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *BeaconRegister) GetJitter() int64 {
	if x != nil {
		return x.Jitter
	}
	return 0
}

func (x *BeaconRegister) GetRegister() *Register {
	if x != nil {
		return x.Register
	}
	return nil
}

func (x *BeaconRegister) GetNextCheckin() int64 {
	if x != nil {
		return x.NextCheckin
	}
	return 0
}

type HTTPSessionInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      []byte `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	BeaconId string `protobuf:"bytes,2,opt,name=beaconId,proto3" json:"beaconId,omitempty"`
}

func (x *HTTPSessionInit) Reset() {
	*x = HTTPSessionInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPSessionInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPSessionInit) ProtoMessage() {}

func (x *HTTPSessionInit) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPSessionInit.ProtoReflect.Descriptor instead.
func (*HTTPSessionInit) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{6}
}

func (x *HTTPSessionInit) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *HTTPSessionInit) GetBeaconId() string {
	if x != nil {
		return x.BeaconId
	}
	return ""
}

// *** Commands ***
type WhoamiReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *WhoamiReq) Reset() {
	*x = WhoamiReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoamiReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoamiReq) ProtoMessage() {}

func (x *WhoamiReq) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoamiReq.ProtoReflect.Descriptor instead.
func (*WhoamiReq) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{7}
}

func (x *WhoamiReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type WhoamiResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Whoami   *commonpb.Whoami   `protobuf:"bytes,1,opt,name=Whoami,proto3" json:"Whoami,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *WhoamiResp) Reset() {
	*x = WhoamiResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WhoamiResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WhoamiResp) ProtoMessage() {}

func (x *WhoamiResp) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WhoamiResp.ProtoReflect.Descriptor instead.
func (*WhoamiResp) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{8}
}

func (x *WhoamiResp) GetWhoami() *commonpb.Whoami {
	if x != nil {
		return x.Whoami
	}
	return nil
}

func (x *WhoamiResp) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RegisterExtensionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Data    []byte            `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	OS      string            `protobuf:"bytes,3,opt,name=OS,proto3" json:"OS,omitempty"`
	Init    string            `protobuf:"bytes,4,opt,name=Init,proto3" json:"Init,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *RegisterExtensionReq) Reset() {
	*x = RegisterExtensionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterExtensionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterExtensionReq) ProtoMessage() {}

func (x *RegisterExtensionReq) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterExtensionReq.ProtoReflect.Descriptor instead.
func (*RegisterExtensionReq) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterExtensionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterExtensionReq) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RegisterExtensionReq) GetOS() string {
	if x != nil {
		return x.OS
	}
	return ""
}

func (x *RegisterExtensionReq) GetInit() string {
	if x != nil {
		return x.Init
	}
	return ""
}

func (x *RegisterExtensionReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type RegisterExtensionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *RegisterExtensionResp) Reset() {
	*x = RegisterExtensionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterExtensionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterExtensionResp) ProtoMessage() {}

func (x *RegisterExtensionResp) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterExtensionResp.ProtoReflect.Descriptor instead.
func (*RegisterExtensionResp) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterExtensionResp) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type CallExtensionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	ServerStore bool              `protobuf:"varint,2,opt,name=ServerStore,proto3" json:"ServerStore,omitempty"`
	Args        []byte            `protobuf:"bytes,3,opt,name=Args,proto3" json:"Args,omitempty"`
	Export      string            `protobuf:"bytes,4,opt,name=Export,proto3" json:"Export,omitempty"`
	Request     *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *CallExtensionReq) Reset() {
	*x = CallExtensionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallExtensionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallExtensionReq) ProtoMessage() {}

func (x *CallExtensionReq) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallExtensionReq.ProtoReflect.Descriptor instead.
func (*CallExtensionReq) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{11}
}

func (x *CallExtensionReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CallExtensionReq) GetServerStore() bool {
	if x != nil {
		return x.ServerStore
	}
	return false
}

func (x *CallExtensionReq) GetArgs() []byte {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CallExtensionReq) GetExport() string {
	if x != nil {
		return x.Export
	}
	return ""
}

func (x *CallExtensionReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type CallExtensionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output      []byte             `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	ServerStore bool               `protobuf:"varint,2,opt,name=ServerStore,proto3" json:"ServerStore,omitempty"`
	Response    *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *CallExtensionResp) Reset() {
	*x = CallExtensionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallExtensionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallExtensionResp) ProtoMessage() {}

func (x *CallExtensionResp) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallExtensionResp.ProtoReflect.Descriptor instead.
func (*CallExtensionResp) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{12}
}

func (x *CallExtensionResp) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *CallExtensionResp) GetServerStore() bool {
	if x != nil {
		return x.ServerStore
	}
	return false
}

func (x *CallExtensionResp) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ListExtensionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ListExtensionsReq) Reset() {
	*x = ListExtensionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExtensionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExtensionsReq) ProtoMessage() {}

func (x *ListExtensionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExtensionsReq.ProtoReflect.Descriptor instead.
func (*ListExtensionsReq) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{13}
}

func (x *ListExtensionsReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type ListExtensionsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names    []string           `protobuf:"bytes,1,rep,name=Names,proto3" json:"Names,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *ListExtensionsResp) Reset() {
	*x = ListExtensionsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListExtensionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListExtensionsResp) ProtoMessage() {}

func (x *ListExtensionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListExtensionsResp.ProtoReflect.Descriptor instead.
func (*ListExtensionsResp) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{14}
}

func (x *ListExtensionsResp) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ListExtensionsResp) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ExecuteAssemblyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assembly     []byte            `protobuf:"bytes,1,opt,name=Assembly,proto3" json:"Assembly,omitempty"`
	AssemblyArgs []string          `protobuf:"bytes,2,rep,name=AssemblyArgs,proto3" json:"AssemblyArgs,omitempty"`
	Runtime      string            `protobuf:"bytes,3,opt,name=runtime,proto3" json:"runtime,omitempty"`
	AmsiBypass   bool              `protobuf:"varint,4,opt,name=amsiBypass,proto3" json:"amsiBypass,omitempty"`
	EtwBypass    bool              `protobuf:"varint,5,opt,name=etwBypass,proto3" json:"etwBypass,omitempty"`
	Request      *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ExecuteAssemblyReq) Reset() {
	*x = ExecuteAssemblyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteAssemblyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteAssemblyReq) ProtoMessage() {}

func (x *ExecuteAssemblyReq) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteAssemblyReq.ProtoReflect.Descriptor instead.
func (*ExecuteAssemblyReq) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{15}
}

func (x *ExecuteAssemblyReq) GetAssembly() []byte {
	if x != nil {
		return x.Assembly
	}
	return nil
}

func (x *ExecuteAssemblyReq) GetAssemblyArgs() []string {
	if x != nil {
		return x.AssemblyArgs
	}
	return nil
}

func (x *ExecuteAssemblyReq) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *ExecuteAssemblyReq) GetAmsiBypass() bool {
	if x != nil {
		return x.AmsiBypass
	}
	return false
}

func (x *ExecuteAssemblyReq) GetEtwBypass() bool {
	if x != nil {
		return x.EtwBypass
	}
	return false
}

func (x *ExecuteAssemblyReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type ExecuteAssemblyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output   []byte             `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *ExecuteAssemblyResp) Reset() {
	*x = ExecuteAssemblyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteAssemblyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteAssemblyResp) ProtoMessage() {}

func (x *ExecuteAssemblyResp) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteAssemblyResp.ProtoReflect.Descriptor instead.
func (*ExecuteAssemblyResp) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{16}
}

func (x *ExecuteAssemblyResp) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *ExecuteAssemblyResp) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ExecuteShellcodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shellcode                []byte            `protobuf:"bytes,1,opt,name=Shellcode,proto3" json:"Shellcode,omitempty"`
	SpoofedParentProcessName string            `protobuf:"bytes,2,opt,name=SpoofedParentProcessName,proto3" json:"SpoofedParentProcessName,omitempty"`
	MockProgramPath          string            `protobuf:"bytes,3,opt,name=MockProgramPath,proto3" json:"MockProgramPath,omitempty"`
	InjectionTechnique       string            `protobuf:"bytes,4,opt,name=InjectionTechnique,proto3" json:"InjectionTechnique,omitempty"`
	Pid                      string            `protobuf:"bytes,5,opt,name=pid,proto3" json:"pid,omitempty"`
	Request                  *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *ExecuteShellcodeReq) Reset() {
	*x = ExecuteShellcodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteShellcodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteShellcodeReq) ProtoMessage() {}

func (x *ExecuteShellcodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteShellcodeReq.ProtoReflect.Descriptor instead.
func (*ExecuteShellcodeReq) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{17}
}

func (x *ExecuteShellcodeReq) GetShellcode() []byte {
	if x != nil {
		return x.Shellcode
	}
	return nil
}

func (x *ExecuteShellcodeReq) GetSpoofedParentProcessName() string {
	if x != nil {
		return x.SpoofedParentProcessName
	}
	return ""
}

func (x *ExecuteShellcodeReq) GetMockProgramPath() string {
	if x != nil {
		return x.MockProgramPath
	}
	return ""
}

func (x *ExecuteShellcodeReq) GetInjectionTechnique() string {
	if x != nil {
		return x.InjectionTechnique
	}
	return ""
}

func (x *ExecuteShellcodeReq) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *ExecuteShellcodeReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type ExecuteShellcodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output   []byte             `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *ExecuteShellcodeResp) Reset() {
	*x = ExecuteShellcodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteShellcodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteShellcodeResp) ProtoMessage() {}

func (x *ExecuteShellcodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteShellcodeResp.ProtoReflect.Descriptor instead.
func (*ExecuteShellcodeResp) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{18}
}

func (x *ExecuteShellcodeResp) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *ExecuteShellcodeResp) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// *** Upload / Download ***
type UploadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File    []byte            `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
	Path    string            `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	Request *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *UploadReq) Reset() {
	*x = UploadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadReq) ProtoMessage() {}

func (x *UploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadReq.ProtoReflect.Descriptor instead.
func (*UploadReq) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{19}
}

func (x *UploadReq) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UploadReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UploadReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type UploadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *UploadResp) Reset() {
	*x = UploadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResp) ProtoMessage() {}

func (x *UploadResp) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResp.ProtoReflect.Descriptor instead.
func (*UploadResp) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{20}
}

func (x *UploadResp) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type DownloadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemotePath string            `protobuf:"bytes,1,opt,name=RemotePath,proto3" json:"RemotePath,omitempty"`
	LocalPath  string            `protobuf:"bytes,2,opt,name=LocalPath,proto3" json:"LocalPath,omitempty"`
	Request    *commonpb.Request `protobuf:"bytes,9,opt,name=Request,proto3" json:"Request,omitempty"`
}

func (x *DownloadReq) Reset() {
	*x = DownloadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadReq) ProtoMessage() {}

func (x *DownloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadReq.ProtoReflect.Descriptor instead.
func (*DownloadReq) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{21}
}

func (x *DownloadReq) GetRemotePath() string {
	if x != nil {
		return x.RemotePath
	}
	return ""
}

func (x *DownloadReq) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

func (x *DownloadReq) GetRequest() *commonpb.Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type DownloadResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File      []byte             `protobuf:"bytes,1,opt,name=File,proto3" json:"File,omitempty"`
	LocalPath string             `protobuf:"bytes,2,opt,name=LocalPath,proto3" json:"LocalPath,omitempty"`
	Response  *commonpb.Response `protobuf:"bytes,9,opt,name=Response,proto3" json:"Response,omitempty"`
}

func (x *DownloadResp) Reset() {
	*x = DownloadResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_implantpb_implantpb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResp) ProtoMessage() {}

func (x *DownloadResp) ProtoReflect() protoreflect.Message {
	mi := &file_implantpb_implantpb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResp.ProtoReflect.Descriptor instead.
func (*DownloadResp) Descriptor() ([]byte, []int) {
	return file_implantpb_implantpb_proto_rawDescGZIP(), []int{22}
}

func (x *DownloadResp) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *DownloadResp) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

func (x *DownloadResp) GetResponse() *commonpb.Response {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_implantpb_implantpb_proto protoreflect.FileDescriptor

var file_implantpb_implantpb_proto_rawDesc = []byte{
	0x0a, 0x19, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x69, 0x6d, 0x70, 0x6c,
	0x61, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x69, 0x6d, 0x70,
	0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a,
	0x08, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2e, 0x0a, 0x12, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x6a, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x29, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4e,
	0x65, 0x78, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x22, 0x92, 0x01,
	0x0a, 0x07, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x57, 0x58, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x52, 0x57, 0x58, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x50, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x36, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xac, 0x03, 0x0a, 0x08, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x4f,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x41,
	0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x63, 0x68, 0x12,
	0x10, 0x0a, 0x03, 0x50, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11,
	0x52, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x55, 0x52, 0x4c, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x65, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x50, 0x65, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x42, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x4a, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x4a, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x12, 0x2f, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x69, 0x6d, 0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4e, 0x65, 0x78, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x22, 0x3f, 0x0a, 0x0f, 0x48, 0x54, 0x54, 0x50, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x09, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x52, 0x65,
	0x71, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x66,
	0x0a, 0x0a, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x06,
	0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x52, 0x06,
	0x57, 0x68, 0x6f, 0x61, 0x6d, 0x69, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x53, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x4f, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x41, 0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x7d, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5a, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73,
	0x65, 0x6d, 0x62, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x41, 0x73, 0x73,
	0x65, 0x6d, 0x62, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c,
	0x79, 0x41, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x41, 0x73, 0x73,
	0x65, 0x6d, 0x62, 0x6c, 0x79, 0x41, 0x72, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x6d, 0x73, 0x69, 0x42, 0x79, 0x70, 0x61, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x6d, 0x73, 0x69, 0x42, 0x79, 0x70,
	0x61, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x74, 0x77, 0x42, 0x79, 0x70, 0x61, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x74, 0x77, 0x42, 0x79, 0x70, 0x61, 0x73,
	0x73, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d,
	0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a,
	0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x02,
	0x0a, 0x13, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x53, 0x70, 0x6f, 0x6f, 0x66, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x53, 0x70, 0x6f, 0x6f, 0x66, 0x65, 0x64, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x4d, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x4d, 0x6f, 0x63, 0x6b, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x6e, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x65, 0x63, 0x68, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5e, 0x0a, 0x14, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x09, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x0a, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x0b, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x2b, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x70, 0x0a, 0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x2e, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x44, 0x75, 0x72, 0x34, 0x6e, 0x43, 0x32, 0x2f,
	0x6d, 0x69, 0x73, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6d,
	0x70, 0x6c, 0x61, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_implantpb_implantpb_proto_rawDescOnce sync.Once
	file_implantpb_implantpb_proto_rawDescData = file_implantpb_implantpb_proto_rawDesc
)

func file_implantpb_implantpb_proto_rawDescGZIP() []byte {
	file_implantpb_implantpb_proto_rawDescOnce.Do(func() {
		file_implantpb_implantpb_proto_rawDescData = protoimpl.X.CompressGZIP(file_implantpb_implantpb_proto_rawDescData)
	})
	return file_implantpb_implantpb_proto_rawDescData
}

var file_implantpb_implantpb_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_implantpb_implantpb_proto_goTypes = []interface{}{
	(*Envelope)(nil),              // 0: implantpb.Envelope
	(*BeaconTasks)(nil),           // 1: implantpb.BeaconTasks
	(*TaskReq)(nil),               // 2: implantpb.TaskReq
	(*Task)(nil),                  // 3: implantpb.Task
	(*Register)(nil),              // 4: implantpb.Register
	(*BeaconRegister)(nil),        // 5: implantpb.BeaconRegister
	(*HTTPSessionInit)(nil),       // 6: implantpb.HTTPSessionInit
	(*WhoamiReq)(nil),             // 7: implantpb.WhoamiReq
	(*WhoamiResp)(nil),            // 8: implantpb.WhoamiResp
	(*RegisterExtensionReq)(nil),  // 9: implantpb.RegisterExtensionReq
	(*RegisterExtensionResp)(nil), // 10: implantpb.RegisterExtensionResp
	(*CallExtensionReq)(nil),      // 11: implantpb.CallExtensionReq
	(*CallExtensionResp)(nil),     // 12: implantpb.CallExtensionResp
	(*ListExtensionsReq)(nil),     // 13: implantpb.ListExtensionsReq
	(*ListExtensionsResp)(nil),    // 14: implantpb.ListExtensionsResp
	(*ExecuteAssemblyReq)(nil),    // 15: implantpb.ExecuteAssemblyReq
	(*ExecuteAssemblyResp)(nil),   // 16: implantpb.ExecuteAssemblyResp
	(*ExecuteShellcodeReq)(nil),   // 17: implantpb.ExecuteShellcodeReq
	(*ExecuteShellcodeResp)(nil),  // 18: implantpb.ExecuteShellcodeResp
	(*UploadReq)(nil),             // 19: implantpb.UploadReq
	(*UploadResp)(nil),            // 20: implantpb.UploadResp
	(*DownloadReq)(nil),           // 21: implantpb.DownloadReq
	(*DownloadResp)(nil),          // 22: implantpb.DownloadResp
	(*commonpb.Request)(nil),      // 23: commonpb.Request
	(*commonpb.Response)(nil),     // 24: commonpb.Response
	(*commonpb.Whoami)(nil),       // 25: commonpb.Whoami
}
var file_implantpb_implantpb_proto_depIdxs = []int32{
	0,  // 0: implantpb.BeaconTasks.Tasks:type_name -> implantpb.Envelope
	23, // 1: implantpb.TaskReq.Request:type_name -> commonpb.Request
	24, // 2: implantpb.Task.Response:type_name -> commonpb.Response
	4,  // 3: implantpb.BeaconRegister.Register:type_name -> implantpb.Register
	23, // 4: implantpb.WhoamiReq.Request:type_name -> commonpb.Request
	25, // 5: implantpb.WhoamiResp.Whoami:type_name -> commonpb.Whoami
	24, // 6: implantpb.WhoamiResp.Response:type_name -> commonpb.Response
	23, // 7: implantpb.RegisterExtensionReq.Request:type_name -> commonpb.Request
	24, // 8: implantpb.RegisterExtensionResp.Response:type_name -> commonpb.Response
	23, // 9: implantpb.CallExtensionReq.Request:type_name -> commonpb.Request
	24, // 10: implantpb.CallExtensionResp.Response:type_name -> commonpb.Response
	23, // 11: implantpb.ListExtensionsReq.Request:type_name -> commonpb.Request
	24, // 12: implantpb.ListExtensionsResp.Response:type_name -> commonpb.Response
	23, // 13: implantpb.ExecuteAssemblyReq.Request:type_name -> commonpb.Request
	24, // 14: implantpb.ExecuteAssemblyResp.Response:type_name -> commonpb.Response
	23, // 15: implantpb.ExecuteShellcodeReq.Request:type_name -> commonpb.Request
	24, // 16: implantpb.ExecuteShellcodeResp.Response:type_name -> commonpb.Response
	23, // 17: implantpb.UploadReq.Request:type_name -> commonpb.Request
	24, // 18: implantpb.UploadResp.Response:type_name -> commonpb.Response
	23, // 19: implantpb.DownloadReq.Request:type_name -> commonpb.Request
	24, // 20: implantpb.DownloadResp.Response:type_name -> commonpb.Response
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_implantpb_implantpb_proto_init() }
func file_implantpb_implantpb_proto_init() {
	if File_implantpb_implantpb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_implantpb_implantpb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Register); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPSessionInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoamiReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WhoamiResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterExtensionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterExtensionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallExtensionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallExtensionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExtensionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListExtensionsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteAssemblyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteAssemblyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteShellcodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteShellcodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_implantpb_implantpb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_implantpb_implantpb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_implantpb_implantpb_proto_goTypes,
		DependencyIndexes: file_implantpb_implantpb_proto_depIdxs,
		MessageInfos:      file_implantpb_implantpb_proto_msgTypes,
	}.Build()
	File_implantpb_implantpb_proto = out.File
	file_implantpb_implantpb_proto_rawDesc = nil
	file_implantpb_implantpb_proto_goTypes = nil
	file_implantpb_implantpb_proto_depIdxs = nil
}
