// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.0
// 	protoc        v4.22.1
// source: rpcpb/services.proto

package rpcpb

import (
	"Dur4nC2/misc/protobuf/clientpb"
	"Dur4nC2/misc/protobuf/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_rpcpb_services_proto protoreflect.FileDescriptor

var file_rpcpb_services_proto_rawDesc = []byte{
	0x0a, 0x14, 0x72, 0x70, 0x63, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72, 0x70, 0x63, 0x70, 0x62, 0x1a, 0x15, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xff, 0x09, 0x0a, 0x0d,
	0x54, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x50, 0x43, 0x12, 0x31, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73, 0x12, 0x0f, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x73,
	0x12, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x1a,
	0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x12, 0x31, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x12, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x10, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x1a, 0x15, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12,
	0x42, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x14, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x3e, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x14, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x54,
	0x61, 0x73, 0x6b, 0x12, 0x35, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x12, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x4f,
	0x43, 0x12, 0x0d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x49, 0x4f, 0x43,
	0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x2f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x49,
	0x4f, 0x43, 0x12, 0x0d, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x49, 0x4f,
	0x43, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x31, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x4c, 0x6f, 0x6f, 0x74, 0x12, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x4c, 0x6f, 0x6f, 0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x4c, 0x6f, 0x6f, 0x74,
	0x12, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74,
	0x1a, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74,
	0x12, 0x2d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x74, 0x12, 0x0e,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x1a, 0x0f,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x2c, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x74, 0x12, 0x0e, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x1a, 0x0e, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x12, 0x30, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x1a,
	0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x12,
	0x2c, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x6f, 0x74, 0x12, 0x0f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0f, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x73, 0x12, 0x2a, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6f, 0x74, 0x12, 0x0e, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x6f, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x12, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x48, 0x54, 0x54, 0x50, 0x53, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12,
	0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x12, 0x46, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x54, 0x54, 0x50, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x70, 0x62, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x48, 0x54,
	0x54, 0x50, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x16, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x43, 0x50, 0x53, 0x74, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x17, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x48, 0x54, 0x54, 0x50, 0x53, 0x74, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70,
	0x62, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2e, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x42, 0x2a, 0x5a,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x75, 0x72, 0x34,
	0x6e, 0x67, 0x2f, 0x44, 0x75, 0x72, 0x34, 0x6e, 0x43, 0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x72, 0x70, 0x63, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var file_rpcpb_services_proto_goTypes = []interface{}{
	(*commonpb.Empty)(nil),             // 0: commonpb.Empty
	(*clientpb.Beacon)(nil),            // 1: clientpb.Beacon
	(*clientpb.BeaconTask)(nil),        // 2: clientpb.BeaconTask
	(*clientpb.Host)(nil),              // 3: clientpb.Host
	(*clientpb.IOC)(nil),               // 4: clientpb.IOC
	(*clientpb.Loot)(nil),              // 5: clientpb.Loot
	(*clientpb.HTTPListenerReq)(nil),   // 6: clientpb.HTTPListenerReq
	(*clientpb.StagerListenerReq)(nil), // 7: clientpb.StagerListenerReq
	(*clientpb.Beacons)(nil),           // 8: clientpb.Beacons
	(*clientpb.BeaconTasks)(nil),       // 9: clientpb.BeaconTasks
	(*clientpb.Operators)(nil),         // 10: clientpb.Operators
	(*clientpb.Hosts)(nil),             // 11: clientpb.Hosts
	(*clientpb.Loots)(nil),             // 12: clientpb.Loots
	(*clientpb.HTTPListener)(nil),      // 13: clientpb.HTTPListener
	(*clientpb.StagerListener)(nil),    // 14: clientpb.StagerListener
}
var file_rpcpb_services_proto_depIdxs = []int32{
	0,  // 0: rpcpb.TeamServerRPC.ListBeacons:input_type -> commonpb.Empty
	1,  // 1: rpcpb.TeamServerRPC.GetBeacon:input_type -> clientpb.Beacon
	1,  // 2: rpcpb.TeamServerRPC.DeleteBeacon:input_type -> clientpb.Beacon
	1,  // 3: rpcpb.TeamServerRPC.GetBeaconTasks:input_type -> clientpb.Beacon
	2,  // 4: rpcpb.TeamServerRPC.GetBeaconTaskContent:input_type -> clientpb.BeaconTask
	2,  // 5: rpcpb.TeamServerRPC.CancelBeaconTask:input_type -> clientpb.BeaconTask
	0,  // 6: rpcpb.TeamServerRPC.ListOperators:input_type -> commonpb.Empty
	0,  // 7: rpcpb.TeamServerRPC.ListHosts:input_type -> commonpb.Empty
	3,  // 8: rpcpb.TeamServerRPC.GetHost:input_type -> clientpb.Host
	3,  // 9: rpcpb.TeamServerRPC.DeleteHost:input_type -> clientpb.Host
	4,  // 10: rpcpb.TeamServerRPC.AddHostIOC:input_type -> clientpb.IOC
	4,  // 11: rpcpb.TeamServerRPC.DeleteHostIOC:input_type -> clientpb.IOC
	5,  // 12: rpcpb.TeamServerRPC.DeleteHostLoot:input_type -> clientpb.Loot
	5,  // 13: rpcpb.TeamServerRPC.AddLoot:input_type -> clientpb.Loot
	5,  // 14: rpcpb.TeamServerRPC.DeleteLoot:input_type -> clientpb.Loot
	5,  // 15: rpcpb.TeamServerRPC.UpdateLoot:input_type -> clientpb.Loot
	5,  // 16: rpcpb.TeamServerRPC.GetLootContent:input_type -> clientpb.Loot
	0,  // 17: rpcpb.TeamServerRPC.ListLoot:input_type -> commonpb.Empty
	5,  // 18: rpcpb.TeamServerRPC.GetLoot:input_type -> clientpb.Loot
	6,  // 19: rpcpb.TeamServerRPC.StartHTTPSListener:input_type -> clientpb.HTTPListenerReq
	6,  // 20: rpcpb.TeamServerRPC.StartHTTPListener:input_type -> clientpb.HTTPListenerReq
	7,  // 21: rpcpb.TeamServerRPC.StartTCPStagerListener:input_type -> clientpb.StagerListenerReq
	7,  // 22: rpcpb.TeamServerRPC.StartHTTPStagerListener:input_type -> clientpb.StagerListenerReq
	8,  // 23: rpcpb.TeamServerRPC.ListBeacons:output_type -> clientpb.Beacons
	1,  // 24: rpcpb.TeamServerRPC.GetBeacon:output_type -> clientpb.Beacon
	0,  // 25: rpcpb.TeamServerRPC.DeleteBeacon:output_type -> commonpb.Empty
	9,  // 26: rpcpb.TeamServerRPC.GetBeaconTasks:output_type -> clientpb.BeaconTasks
	2,  // 27: rpcpb.TeamServerRPC.GetBeaconTaskContent:output_type -> clientpb.BeaconTask
	2,  // 28: rpcpb.TeamServerRPC.CancelBeaconTask:output_type -> clientpb.BeaconTask
	10, // 29: rpcpb.TeamServerRPC.ListOperators:output_type -> clientpb.Operators
	11, // 30: rpcpb.TeamServerRPC.ListHosts:output_type -> clientpb.Hosts
	3,  // 31: rpcpb.TeamServerRPC.GetHost:output_type -> clientpb.Host
	0,  // 32: rpcpb.TeamServerRPC.DeleteHost:output_type -> commonpb.Empty
	0,  // 33: rpcpb.TeamServerRPC.AddHostIOC:output_type -> commonpb.Empty
	0,  // 34: rpcpb.TeamServerRPC.DeleteHostIOC:output_type -> commonpb.Empty
	0,  // 35: rpcpb.TeamServerRPC.DeleteHostLoot:output_type -> commonpb.Empty
	5,  // 36: rpcpb.TeamServerRPC.AddLoot:output_type -> clientpb.Loot
	0,  // 37: rpcpb.TeamServerRPC.DeleteLoot:output_type -> commonpb.Empty
	5,  // 38: rpcpb.TeamServerRPC.UpdateLoot:output_type -> clientpb.Loot
	5,  // 39: rpcpb.TeamServerRPC.GetLootContent:output_type -> clientpb.Loot
	12, // 40: rpcpb.TeamServerRPC.ListLoot:output_type -> clientpb.Loots
	12, // 41: rpcpb.TeamServerRPC.GetLoot:output_type -> clientpb.Loots
	13, // 42: rpcpb.TeamServerRPC.StartHTTPSListener:output_type -> clientpb.HTTPListener
	13, // 43: rpcpb.TeamServerRPC.StartHTTPListener:output_type -> clientpb.HTTPListener
	14, // 44: rpcpb.TeamServerRPC.StartTCPStagerListener:output_type -> clientpb.StagerListener
	14, // 45: rpcpb.TeamServerRPC.StartHTTPStagerListener:output_type -> clientpb.StagerListener
	23, // [23:46] is the sub-list for method output_type
	0,  // [0:23] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_rpcpb_services_proto_init() }
func file_rpcpb_services_proto_init() {
	if File_rpcpb_services_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpcpb_services_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpcpb_services_proto_goTypes,
		DependencyIndexes: file_rpcpb_services_proto_depIdxs,
	}.Build()
	File_rpcpb_services_proto = out.File
	file_rpcpb_services_proto_rawDesc = nil
	file_rpcpb_services_proto_goTypes = nil
	file_rpcpb_services_proto_depIdxs = nil
}
